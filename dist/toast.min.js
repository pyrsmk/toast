!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).toast=t()}(this,function(){"use strict";var t=function(){function e(){}return e.prototype.load=function(o){return new Promise(function(e,t){var n=document.createElement("link");n.rel="stylesheet",n.href=o,document.querySelector("head").appendChild(n),n.onload=function(){return e()},n.onerror=function(){return t()}})},e}(),n=function(){function e(){}return e.prototype.load=function(o){return new Promise(function(e,t){var n=document.createElement("script");n.src=o,document.querySelector("head").appendChild(n),n.onload=function(){return e()},n.onerror=function(){return t()}})},e}();return new(function(){function e(){}return e.prototype.load=function(e){var t=this;return Promise.all(e.map(function(e){if(""===e.trim())return console.error("[toast] loading aborted: an empty string has been provided"),Promise.reject();switch(e.split(".").pop().toLowerCase()){case"css":return t.css(e);case"js":return t.js(e);default:return console.error("[toast] loading aborted: unable to detect extension for '"+e+"', please use toast.js() or toast.css() instead"),Promise.reject()}}))},e.prototype.css=function(e){return(new t).load(e)},e.prototype.js=function(e){return(new n).load(e)},e}())});