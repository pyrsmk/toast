!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).toast=t()}(this,function(){"use strict";var t=function(){function e(){}return e.prototype.load=function(r){return new Promise(function(e,t){var n=document.createElement("link");n.rel="stylesheet",n.href=r,n.onerror=function(e){return t(e)},document.querySelector("head").appendChild(n);var o=setInterval(function(){"sheet"in n&&(clearInterval(o),e())},50)})},e}(),n=function(){function e(){}return e.prototype.load=function(o){return new Promise(function(e,t){var n=document.createElement("script");n.src=o,document.querySelector("head").appendChild(n),n.onload=function(){return e()},n.onerror=function(e){return t(e)}})},e}();return new(function(){function e(){}return e.prototype.load=function(e){var t=this;return Promise.all(e.map(function(e){if(""===e.trim())return console.warn("[toast] an empty URL has been provided, please fix it to avoid this message"),null;switch(e.split(".").pop().toLowerCase()){case"css":return t.css(e);case"js":return t.js(e);default:return console.warn("[toast] unable to detect extension for '"+e+"' URL, please use toast.js() or toast.css() instead"),null}}).filter(function(e){return null!==e}))},e.prototype.css=function(e){return(new t).load(e)},e.prototype.js=function(e){return(new n).load(e)},e}())});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjAiXSwibmFtZXMiOlsiZ2xvYmFsIiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJzZWxmIiwidG9hc3QiLCJ0aGlzIiwiQ3NzUmVzb3VyY2UiLCJwcm90b3R5cGUiLCJsb2FkIiwidXJsIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJub2RlIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwicmVsIiwiaHJlZiIsIm9uZXJyb3IiLCJldmVudCIsInF1ZXJ5U2VsZWN0b3IiLCJhcHBlbmRDaGlsZCIsInZlcmlmeSIsInNldEludGVydmFsIiwiY2xlYXJJbnRlcnZhbCIsIkpzUmVzb3VyY2UiLCJzcmMiLCJvbmxvYWQiLCJUb2FzdCIsInVybHMiLCJ0aGF0IiwiYWxsIiwibWFwIiwidHJpbSIsImNvbnNvbGUiLCJ3YXJuIiwic3BsaXQiLCJwb3AiLCJ0b0xvd2VyQ2FzZSIsImNzcyIsImpzIiwiZmlsdGVyIiwicHJvbWlzZSJdLCJtYXBwaW5ncyI6IkNBQUMsU0FBVUEsRUFBUUMsR0FDSSxpQkFBWkMsU0FBMEMsb0JBQVhDLE9BQXlCQSxPQUFPRCxRQUFVRCxJQUM5RCxtQkFBWEcsUUFBeUJBLE9BQU9DLElBQU1ELE9BQU9ILElBQ25ERCxFQUFTQSxHQUFVTSxNQUFhQyxNQUFRTixJQUg3QyxDQUlFTyxLQUFNLFdBQWMsYUFFbEIsSUFBSUMsRUFBZSxXQUNmLFNBQVNBLEtBaUJULE9BZkFBLEVBQVlDLFVBQVVDLEtBQU8sU0FBVUMsR0FDbkMsT0FBTyxJQUFJQyxRQUFRLFNBQVVDLEVBQVNDLEdBQ2xDLElBQUlDLEVBQU9DLFNBQVNDLGNBQWMsUUFDbENGLEVBQUtHLElBQU0sYUFDWEgsRUFBS0ksS0FBT1IsRUFDWkksRUFBS0ssUUFBVSxTQUFVQyxHQUFTLE9BQU9QLEVBQU9PLElBQ2hETCxTQUFTTSxjQUFjLFFBQVFDLFlBQVlSLEdBQzNDLElBQUlTLEVBQVNDLFlBQVksV0FDakIsVUFBV1YsSUFDWFcsY0FBY0YsR0FDZFgsTUFFTCxPQUdKTCxFQWxCTyxHQXFCZG1CLEVBQWMsV0FDZCxTQUFTQSxLQVdULE9BVEFBLEVBQVdsQixVQUFVQyxLQUFPLFNBQVVDLEdBQ2xDLE9BQU8sSUFBSUMsUUFBUSxTQUFVQyxFQUFTQyxHQUNsQyxJQUFJQyxFQUFPQyxTQUFTQyxjQUFjLFVBQ2xDRixFQUFLYSxJQUFNakIsRUFDWEssU0FBU00sY0FBYyxRQUFRQyxZQUFZUixHQUMzQ0EsRUFBS2MsT0FBUyxXQUFjLE9BQU9oQixLQUNuQ0UsRUFBS0ssUUFBVSxTQUFVQyxHQUFTLE9BQU9QLEVBQU9PLE9BR2pETSxFQVpNLEdBOENqQixPQUZjLElBN0JELFdBQ1QsU0FBU0csS0EwQlQsT0F4QkFBLEVBQU1yQixVQUFVQyxLQUFPLFNBQVVxQixHQUM3QixJQUFJQyxFQUFPekIsS0FDWCxPQUFPSyxRQUFRcUIsSUFBSUYsRUFBS0csSUFBSSxTQUFVdkIsR0FDbEMsR0FBbUIsS0FBZkEsRUFBSXdCLE9BRUosT0FEQUMsUUFBUUMsS0FBSywrRUFDTixLQUVYLE9BQVExQixFQUFJMkIsTUFBTSxLQUFLQyxNQUFNQyxlQUN6QixJQUFLLE1BQ0QsT0FBT1IsRUFBS1MsSUFBSTlCLEdBQ3BCLElBQUssS0FDRCxPQUFPcUIsRUFBS1UsR0FBRy9CLEdBQ25CLFFBRUksT0FEQXlCLFFBQVFDLEtBQUssMkNBQTZDMUIsRUFBTSx1REFDekQsUUFFaEJnQyxPQUFPLFNBQVVDLEdBQVcsT0FBbUIsT0FBWkEsTUFFMUNkLEVBQU1yQixVQUFVZ0MsSUFBTSxTQUFVOUIsR0FDNUIsT0FBTyxJQUFLSCxHQUFlRSxLQUFLQyxJQUVwQ21CLEVBQU1yQixVQUFVaUMsR0FBSyxTQUFVL0IsR0FDM0IsT0FBTyxJQUFLZ0IsR0FBY2pCLEtBQUtDLElBRTVCbUIsRUEzQkMiLCJmaWxlIjoidG9hc3QuanMifQ==