!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).toast=t()}(this,function(){"use strict";var t=function(){function e(){}return e.prototype.load=function(e){var t=document.createElement("link");return t.rel="stylesheet",t.href=e,document.querySelector("head").appendChild(t),this.promise(t)},e.prototype.listen=function(e){return this.load(e.href)},e.prototype.promise=function(e){var n=e;return new Promise(function(e,t){n.addEventListener("load",function(){return e(n)}),n.addEventListener("error",function(){return t()})})},e}(),n=function(){function e(){}return e.prototype.load=function(e){var t=document.createElement("script");return t.src=e,document.querySelector("head").appendChild(t),this.promise(t)},e.prototype.listen=function(e){return this.load(e.src)},e.prototype.promise=function(e){var n=e;return new Promise(function(e,t){n.addEventListener("load",function(){return e(n)}),n.addEventListener("error",function(){return t()}),n.addEventListener("readystatechange",function(){"complete"===n.readyState&&e(n)})})},e}();return new(function(){function e(){this.name="[toast]"}return e.prototype.all=function(e){var t=this,n=this;return Promise.all(e.map(function(e){if("string"==typeof e)switch(e.split(".").pop().toLowerCase()){case"css":return n.css(e);case"js":return n.js(e);default:return console.error(t.name+" unable to detect extension of '"+e+"'"),Promise.reject()}else{if(e instanceof HTMLLinkElement)return n.css(e);if(e instanceof HTMLScriptElement)return n.js(e)}return console.error(t.name+" unexpected error"),Promise.reject()}))},e.prototype.css=function(e){return this.resource(new t,e)},e.prototype.js=function(e){return this.resource(new n,e)},e.prototype.resource=function(e,t){return"string"==typeof t?e.load(t):e.listen(t)},e}())});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjAiXSwibmFtZXMiOlsiZ2xvYmFsIiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJzZWxmIiwidG9hc3QiLCJ0aGlzIiwiQ3NzUmVzb3VyY2UiLCJwcm90b3R5cGUiLCJsb2FkIiwidXJsIiwibGluayIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInJlbCIsImhyZWYiLCJxdWVyeVNlbGVjdG9yIiwiYXBwZW5kQ2hpbGQiLCJwcm9taXNlIiwibGlzdGVuIiwibm9kZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiYWRkRXZlbnRMaXN0ZW5lciIsIkpzUmVzb3VyY2UiLCJzY3JpcHQiLCJzcmMiLCJyZWFkeVN0YXRlIiwiVG9hc3QiLCJuYW1lIiwiYWxsIiwiaXRlbXMiLCJfdGhpcyIsInRoYXQiLCJtYXAiLCJpdGVtIiwic3BsaXQiLCJwb3AiLCJ0b0xvd2VyQ2FzZSIsImNzcyIsImpzIiwiY29uc29sZSIsImVycm9yIiwiSFRNTExpbmtFbGVtZW50IiwiSFRNTFNjcmlwdEVsZW1lbnQiLCJyZXNvdXJjZSJdLCJtYXBwaW5ncyI6IkNBQUMsU0FBVUEsRUFBUUMsR0FDSSxpQkFBWkMsU0FBMEMsb0JBQVhDLE9BQXlCQSxPQUFPRCxRQUFVRCxJQUM5RCxtQkFBWEcsUUFBeUJBLE9BQU9DLElBQU1ELE9BQU9ILElBQ25ERCxFQUFTQSxHQUFVTSxNQUFhQyxNQUFRTixJQUg3QyxDQUlFTyxLQUFNLFdBQWMsYUFFbEIsSUFBSUMsRUFBZSxXQUNmLFNBQVNBLEtBbUJULE9BakJBQSxFQUFZQyxVQUFVQyxLQUFPLFNBQVVDLEdBQ25DLElBQUlDLEVBQU9DLFNBQVNDLGNBQWMsUUFJbEMsT0FIQUYsRUFBS0csSUFBTSxhQUNYSCxFQUFLSSxLQUFPTCxFQUNaRSxTQUFTSSxjQUFjLFFBQVFDLFlBQVlOLEdBQ3BDTCxLQUFLWSxRQUFRUCxJQUV4QkosRUFBWUMsVUFBVVcsT0FBUyxTQUFVQyxHQUNyQyxPQUFPZCxLQUFLRyxLQUFLVyxFQUFLTCxPQUUxQlIsRUFBWUMsVUFBVVUsUUFBVSxTQUFVRSxHQUN0QyxJQUFJVCxFQUFPUyxFQUNYLE9BQU8sSUFBSUMsUUFBUSxTQUFVQyxFQUFTQyxHQUNsQ1osRUFBS2EsaUJBQWlCLE9BQVEsV0FBYyxPQUFPRixFQUFRWCxLQUMzREEsRUFBS2EsaUJBQWlCLFFBQVMsV0FBYyxPQUFPRCxTQUdyRGhCLEVBcEJPLEdBdUJka0IsRUFBYyxXQUNkLFNBQVNBLEtBdUJULE9BckJBQSxFQUFXakIsVUFBVUMsS0FBTyxTQUFVQyxHQUNsQyxJQUFJZ0IsRUFBU2QsU0FBU0MsY0FBYyxVQUdwQyxPQUZBYSxFQUFPQyxJQUFNakIsRUFDYkUsU0FBU0ksY0FBYyxRQUFRQyxZQUFZUyxHQUNwQ3BCLEtBQUtZLFFBQVFRLElBRXhCRCxFQUFXakIsVUFBVVcsT0FBUyxTQUFVQyxHQUNwQyxPQUFPZCxLQUFLRyxLQUFLVyxFQUFLTyxNQUUxQkYsRUFBV2pCLFVBQVVVLFFBQVUsU0FBVUUsR0FDckMsSUFBSU0sRUFBU04sRUFDYixPQUFPLElBQUlDLFFBQVEsU0FBVUMsRUFBU0MsR0FDbENHLEVBQU9GLGlCQUFpQixPQUFRLFdBQWMsT0FBT0YsRUFBUUksS0FDN0RBLEVBQU9GLGlCQUFpQixRQUFTLFdBQWMsT0FBT0QsTUFDdERHLEVBQU9GLGlCQUFpQixtQkFBb0IsV0FDZCxhQUF0QkUsRUFBT0UsWUFDUE4sRUFBUUksUUFLakJELEVBeEJNLEdBMEVqQixPQUZjLElBN0NELFdBQ1QsU0FBU0ksSUFDTHZCLEtBQUt3QixLQUFPLFVBeUNoQixPQXZDQUQsRUFBTXJCLFVBQVV1QixJQUFNLFNBQVVDLEdBQzVCLElBQUlDLEVBQVEzQixLQUNSNEIsRUFBTzVCLEtBQ1gsT0FBT2UsUUFBUVUsSUFBSUMsRUFBTUcsSUFBSSxTQUFVQyxHQUNuQyxHQUFvQixpQkFBVEEsRUFDUCxPQUFRQSxFQUFLQyxNQUFNLEtBQUtDLE1BQU1DLGVBQzFCLElBQUssTUFDRCxPQUFPTCxFQUFLTSxJQUFJSixHQUNwQixJQUFLLEtBQ0QsT0FBT0YsRUFBS08sR0FBR0wsR0FDbkIsUUFFSSxPQURBTSxRQUFRQyxNQUFNVixFQUFNSCxLQUFPLG1DQUFxQ00sRUFBTyxLQUNoRWYsUUFBUUUsYUFHdEIsQ0FBQSxHQUFJYSxhQUFnQlEsZ0JBQ3JCLE9BQU9WLEVBQUtNLElBQUlKLEdBRWYsR0FBSUEsYUFBZ0JTLGtCQUNyQixPQUFPWCxFQUFLTyxHQUFHTCxHQUduQixPQURBTSxRQUFRQyxNQUFNVixFQUFNSCxLQUFPLHFCQUNwQlQsUUFBUUUsYUFHdkJNLEVBQU1yQixVQUFVZ0MsSUFBTSxTQUFVSixHQUM1QixPQUFPOUIsS0FBS3dDLFNBQVMsSUFBSXZDLEVBQWU2QixJQUU1Q1AsRUFBTXJCLFVBQVVpQyxHQUFLLFNBQVVMLEdBQzNCLE9BQU85QixLQUFLd0MsU0FBUyxJQUFJckIsRUFBY1csSUFFM0NQLEVBQU1yQixVQUFVc0MsU0FBVyxTQUFVQSxFQUFVVixHQUMzQyxNQUFvQixpQkFBVEEsRUFDQVUsRUFBU3JDLEtBQUsyQixHQUdkVSxFQUFTM0IsT0FBT2lCLElBR3hCUCxFQTNDQyIsImZpbGUiOiJ0b2FzdC5qcyJ9