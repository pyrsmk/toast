!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).toast=t()}(this,function(){"use strict";var t=function(){function e(){}return e.prototype.load=function(o){return new Promise(function(e,t){var n=document.createElement("link");n.rel="stylesheet",n.href=o,document.querySelector("head").appendChild(n),n.onload=function(){return e()},n.onerror=function(){return t()}})},e}(),n=function(){function e(){}return e.prototype.load=function(o){return new Promise(function(e,t){var n=document.createElement("script");n.src=o,document.querySelector("head").appendChild(n),n.onload=function(){return e()},n.onerror=function(){return t()}})},e}();return new(function(){function e(){}return e.prototype.load=function(e){var t=this;return Promise.all(e.map(function(e){if(""===e.trim())return console.error("[toast] loading aborted: an empty string has been provided"),Promise.reject();switch(e.split(".").pop().toLowerCase()){case"css":return t.css(e);case"js":return t.js(e);default:return console.error("[toast] loading aborted: unable to detect extension for '"+e+"', please use toast.js() or toast.css() instead"),Promise.reject()}}))},e.prototype.css=function(e){return(new t).load(e)},e.prototype.js=function(e){return(new n).load(e)},e}())});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjAiXSwibmFtZXMiOlsiZ2xvYmFsIiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJzZWxmIiwidG9hc3QiLCJ0aGlzIiwiQ3NzUmVzb3VyY2UiLCJwcm90b3R5cGUiLCJsb2FkIiwidXJsIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJub2RlIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwicmVsIiwiaHJlZiIsInF1ZXJ5U2VsZWN0b3IiLCJhcHBlbmRDaGlsZCIsIm9ubG9hZCIsIm9uZXJyb3IiLCJKc1Jlc291cmNlIiwic3JjIiwiVG9hc3QiLCJ1cmxzIiwidGhhdCIsImFsbCIsIm1hcCIsInRyaW0iLCJjb25zb2xlIiwiZXJyb3IiLCJzcGxpdCIsInBvcCIsInRvTG93ZXJDYXNlIiwiY3NzIiwianMiXSwibWFwcGluZ3MiOiJDQUFDLFNBQVVBLEVBQVFDLEdBQ0ksaUJBQVpDLFNBQTBDLG9CQUFYQyxPQUF5QkEsT0FBT0QsUUFBVUQsSUFDOUQsbUJBQVhHLFFBQXlCQSxPQUFPQyxJQUFNRCxPQUFPSCxJQUNuREQsRUFBU0EsR0FBVU0sTUFBYUMsTUFBUU4sSUFIN0MsQ0FJRU8sS0FBTSxXQUFjLGFBRWxCLElBQUlDLEVBQWUsV0FDZixTQUFTQSxLQVlULE9BVkFBLEVBQVlDLFVBQVVDLEtBQU8sU0FBVUMsR0FDbkMsT0FBTyxJQUFJQyxRQUFRLFNBQVVDLEVBQVNDLEdBQ2xDLElBQUlDLEVBQU9DLFNBQVNDLGNBQWMsUUFDbENGLEVBQUtHLElBQU0sYUFDWEgsRUFBS0ksS0FBT1IsRUFDWkssU0FBU0ksY0FBYyxRQUFRQyxZQUFZTixHQUMzQ0EsRUFBS08sT0FBUyxXQUFjLE9BQU9ULEtBQ25DRSxFQUFLUSxRQUFVLFdBQWMsT0FBT1QsUUFHckNOLEVBYk8sR0FnQmRnQixFQUFjLFdBQ2QsU0FBU0EsS0FXVCxPQVRBQSxFQUFXZixVQUFVQyxLQUFPLFNBQVVDLEdBQ2xDLE9BQU8sSUFBSUMsUUFBUSxTQUFVQyxFQUFTQyxHQUNsQyxJQUFJQyxFQUFPQyxTQUFTQyxjQUFjLFVBQ2xDRixFQUFLVSxJQUFNZCxFQUNYSyxTQUFTSSxjQUFjLFFBQVFDLFlBQVlOLEdBQzNDQSxFQUFLTyxPQUFTLFdBQWMsT0FBT1QsS0FDbkNFLEVBQUtRLFFBQVUsV0FBYyxPQUFPVCxRQUdyQ1UsRUFaTSxHQThDakIsT0FGYyxJQTdCRCxXQUNULFNBQVNFLEtBMEJULE9BeEJBQSxFQUFNakIsVUFBVUMsS0FBTyxTQUFVaUIsR0FDN0IsSUFBSUMsRUFBT3JCLEtBQ1gsT0FBT0ssUUFBUWlCLElBQUlGLEVBQUtHLElBQUksU0FBVW5CLEdBQ2xDLEdBQW1CLEtBQWZBLEVBQUlvQixPQUVKLE9BREFDLFFBQVFDLE1BQU0sOERBQ1ByQixRQUFRRSxTQUVuQixPQUFRSCxFQUFJdUIsTUFBTSxLQUFLQyxNQUFNQyxlQUN6QixJQUFLLE1BQ0QsT0FBT1IsRUFBS1MsSUFBSTFCLEdBQ3BCLElBQUssS0FDRCxPQUFPaUIsRUFBS1UsR0FBRzNCLEdBQ25CLFFBRUksT0FEQXFCLFFBQVFDLE1BQU0sNERBQThEdEIsRUFBTSxtREFDM0VDLFFBQVFFLGNBSS9CWSxFQUFNakIsVUFBVTRCLElBQU0sU0FBVTFCLEdBQzVCLE9BQU8sSUFBS0gsR0FBZUUsS0FBS0MsSUFFcENlLEVBQU1qQixVQUFVNkIsR0FBSyxTQUFVM0IsR0FDM0IsT0FBTyxJQUFLYSxHQUFjZCxLQUFLQyxJQUU1QmUsRUEzQkMiLCJmaWxlIjoidG9hc3QuanMifQ==